<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 쿼리작성해서 db에 보내고 결과 까지 받는 장소 -->
<mapper namespace="employee">

	<insert id="insertEmployee" parameterType="com.hb.employee.EmployeeVO">
		insert into EMPLOYEE values(
		#{id},#{password},#{name},#{email},#{address},#{departmentID},
		#{position},#{cellPhone},#{phone},#{birth},#{profile},SYSDATE)
	</insert>
	
	<update id="updateEmployee" parameterType="com.hb.employee.EmployeeVO">
		update EMPLOYEE 
		set password = #{password}, email=#{email}, address = #{address}, departmentID = #{departmentID}, 
		
		<if test="hired_date != null">
			hired_date = #{hired_date},
		</if>
			name =#{name}, position=#{position}, cellPhone=#{cellPhone}, phone=#{phone}, birth =#{birth}, profile=#{profile}
		where id = #{id}
	</update>
	
	<delete id="deleteEmployee" parameterType="String">
		delete from EMPLOYEE where id = #{id} 
	</delete>
	
	<!-- <select id="loginCheck" parameterType="com.hb.employee.EmployeeVO" resultType="com.hb.employee.EmployeeVO">
		select * from EMPLOYEE where id = #{id} and password =#{password}
	</select> -->
	
	<select id="loginCheck" parameterType="com.hb.employee.EmployeeVO" resultType="com.hb.employee.EmpViewVO">
		select * from emp_view where id=#{id} and password = #{password}
	</select>
	
	<select id="insert_idCheck" parameterType="String" resultType="int">
		select count(id) from EMPLOYEE where id = #{id} 
	</select>
	
	<select id="selectEmployee" parameterType="String" resultType="com.hb.employee.EmployeeVO" >
		select * from EMPLOYEE where id = #{id}
	</select>
	
	<select id="SelectListUseDept" parameterType="com.hb.employee.EmployeeVO" resultType="com.hb.employee.EmployeeVO">
		select emp.name, emp.id
		from employee emp
		where emp.departmentid = #{departmentid}
		order by emp.HIRED_DATE asc
	</select>
	<select id="selectForContact" parameterType="String" resultType="hashMap">
		 select emp.name,  NVL(emp.email,'-') EMAIL, NVL(emp.cellphone,'-') CELLPHONE, NVL(emp.phone,'-') PHONE, emp.position, dept.departmentname 
		 from employee emp, department dept 
		 where emp.departmentid = #{deptID} and emp.departmentid=dept.departmentid  
		 order by name asc
	</select>
	<!-- 
		//////////////////////////////////////////////////////////////////////////////////
	 -->
	
	<insert id="insertAR" parameterType="com.hb.employee.AttendanceRecordVO">
		insert into AttendanceRecord values(AR_SEQ.nextval, #{id}, #{ar_Date}, to_char(SYSDATE, 'HH24:MI:SS'), '00:00:00',null, #{ip})
	</insert>
	
	<update id="updateAR" parameterType="com.hb.employee.AttendanceRecordVO">
		update AttendanceRecord
		set startTime = #{startTime}, endTime = #{endTime}, workTime = #{workTime}, ip = #{ip}
		where ar_No = #{ar_No}
	</update>
	
	<select id="checkTodayRecord" parameterType="com.hb.employee.AttendanceRecordVO" resultType="com.hb.employee.AttendanceRecordVO">
		select * from AttendanceRecord where id =#{id} and ar_Date=#{ar_Date}
	</select>
	
	<select id="selectListUseDate" parameterType="map" resultType="com.hb.employee.AttendanceRecordVO">
		select * from AttendanceRecord where id = #{id} and AR_Date like #{date} order by ar_Date ASC
	</select>
	
	
	<select id="CheckDeptSuper" resultType="int" parameterType="String">
		select count(*) from department where DEPARTMENTSUPERID = #{id}
	</select>
	
	<select id="selectListDeptAR" resultType="com.hb.employee.AttendanceRecordVO" parameterType="map">
		select ar.*, emp.name
		from attendanceRecord ar, employee emp 
		where ar.id = emp.id and emp.departmentid = #{departmentid}
		        and ar_date = #{date}
		order by emp.name asc
	</select>

</mapper>










